name: On Pull Request Workflow

on:
  pull_request:
    branches: [master]

jobs:
  check-coverage-regression:
    name: Check for coverage regression
    runs-on: ubuntu-latest
    permissions:
        pull-requests: write

    steps:
    - name: Set PR coverage manually
      run: echo "92.5" > pr-coverage

    - name: Download master coverage metric
      id: download-master-coverage
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: on-merge.yml
        name: master-coverage
        if_no_artifact_found: warn
    - name: Checking for coverage regression
      id: check-coverage
      run: |
        CURRENT_COVERAGE=$(cat pr-coverage)
        DELTA="Unknown"
        REGRESSION=0
        if [ -s master-coverage ]; then
            MASTER_COVERAGE=$(cat master-coverage)
            COMPARISON="$CURRENT_COVERAGE>=$MASTER_COVERAGE"
            DELTA=$( echo "$CURRENT_COVERAGE - $DELTA_COVERAGE" | bc )
            echo "Master coverage is at $MASTER_COVERAGE"
            echo "PR coverage is at $CURRENT_COVERAGE"
            echo "Coverage comparison: $COMPARISON"
            if [ $(echo $COMPARISON | bc) -eq 1 ]; then
                echo "PR coverage greater than or equal to Master coverage. Ok to proceed."
            else
                echo "PR coverage less than Master coverage."
                REGRESSION=1
            fi
        else
            echo "No previous coverage metric found. Current coverage is $CURRENT_COVERAGE"
        fi
        echo "current_coverage=$CURRENT_COVERAGE" >> "$GITHUB_OUTPUT"
        echo "delta=$DELTA" >> "$GITHUB_OUTPUT"
        echo "regression=$REGRESSION" >> "$GITHUB_OUTPUT"
    - name: Comment with coverage details
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        append: true
        message: |
            Coverage is at ${{ steps.check-coverage.outputs.current_coverage }}% (${{ steps.check-coverage.outputs.delta }} delta)
    - name: Fail if coverage regression
      run: |
        REGRESSION=${{ steps.check-coverage.outputs.regression }}
        if [ "$REGRESSION" -eq 1 ]; then
            echo "Failing build."
            exit 1
        fi
    - name: Upload PR coverage metric
      uses: actions/upload-artifact@v2
      with:
        name: pr-coverage
        path: pr-coverage
        if-no-files-found: error